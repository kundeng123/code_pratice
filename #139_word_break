class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
    
    //Time complexity: O(n^2)
    //Space: O(n)
        boolean dp[] = new boolean[s.length() + 1];
        dp[0] = true;
        for (int i = 1; i<=s.length(); i++){
            for (int j = 0; j<i; j++){
                if(wordDict.contains(s.substring(j, i)) && dp[j]){
                    dp[i] = true;
                    break;
                }
                
            }
        }
        
        //for(boolean temp: dp)
        //    System.out.println("dp is " + temp );
        return dp[s.length()];
    }
}

class Solution {
    public int findMin(int[] nums) {
        int size = nums.length;
        int lo = 0;
        int hi = size -1;
        //since it's ascending order, if nums[mid] < nums[mid-1], 
        //it's the rotate (min)
        //else :
        // if nums[mid] > nums[lo] and nums[mid] > nums[hi]
        // min in [mid, hi]
        //else min in [lo, mid]
        // time complexity: binary search, O(logn)
        //space: O(1)
        while( lo < hi ){
            int mid = (lo + hi)/2;
        //for case [1,2] need to check if mid > 0 
        if (mid >0 &&  nums[mid] < nums[mid - 1]){
            return nums[mid];
        }
        //for [2,1], mid = lo
        if (nums[mid] >= nums[lo] && nums[mid] > nums[hi]){
            lo =mid + 1;
        }
        else{
            hi = mid - 1;
        }
        }
        return nums[lo];
        
        
}
}

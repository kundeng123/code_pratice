class Solution {
    public int search(int[] nums, int target) {
        
        //using binary search
        int size = nums.length;
        int lo = 0; 
        int hi = size -1;
        //binary serach to find the minimun , which is the rotate 
        while(lo < hi){
            int mid = (lo + hi) / 2;
            if(nums[mid] > nums[hi]){
                lo = mid + 1;
            }
            else{
                hi = mid;
            }
        }
        
        int rotate = lo;
        lo = 0;
        hi = size - 1;
        
        //regular binary search, based on [rot, rot + hi] string 
        while ( lo <= hi){
            int mid = (lo + hi) / 2;
            int realmid = (mid + rotate) % size ;
            if (nums[realmid] == target)
                return realmid;
            else if (nums[realmid] > target){
                hi = mid - 1;
            }
            else{
                lo = mid+1;
            }
        }
        return -1;
    }
}

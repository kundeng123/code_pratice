class Solution {
    public int firstUniqChar(String s) {
        # time complexity: O(n) linear. loop thourgh the string once
        # space: O(n)
        HashMap<Character, Integer> wordCountMap = new HashMap<Character, Integer>();
        int size = s.length();
        
        for (int i = 0; i < size; i++){
            char c = s.charAt(i); //loop char by char
            //getOrDefault: 
            //Returns either the value of the specified Key in Map or the
            //Default Value if the Key is not available
            //wordCountMap.getOrDefault(c, 0);
            // count.put(c, count.getOrDefault(c, 0) + 1);
            if(wordCountMap.containsKey(c)){
                wordCountMap.put(c, wordCountMap.get(c)+1);
            }
            else{
                wordCountMap.put(c, 1);
            }
            
        }
        for(int i =0; i<size; i++){
            if (wordCountMap.get(s.charAt(i)) ==1 ){
                return i;
            }
        }
        //System.out.println("count of e is " + wordCountMap.get('e'));
        return -1;
    }
}

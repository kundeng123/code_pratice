class Solution:
    def findMedianSortedArrays(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """
        N1 = len(nums1)
        N2 = len(nums2)
        N = N1 + N2
        
        i1 = 0
        i2 = 0
        i = 0
        
        currentNumber = None
        previousNumber = None
        
        while i < N:
            if i1 < N1 and i2 < N2 and nums1[i1] <= nums2[i2]:
                currentNumber = nums1[i1]
                i1 = i1 + 1
            elif i1 < N1 and i2 < N2 and nums1[i1] > nums2[i2]:
                currentNumber = nums2[i2]
                i2 = i2 + 1
            elif i1 >= N1:
                currentNumber = nums2[i2]
                i2 = i2 + 1
            elif i2 >= N2:
                currentNumber = nums1[i1]
                i1 = i1 + 1
            
            if N % 2 == 1 and i == N // 2:
                return currentNumber
            elif N % 2 == 0 and i == N//2:
                return (previousNumber + currentNumber)*0.5
            
            previousNumber = currentNumber
            i = i + 1
            
        return 0
        

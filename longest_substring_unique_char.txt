class Solution:
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        hashMap = {}
        head = 0
        tail = 0
        result = 0
        for char in s:
            
            #print(hashMap)
            
            if char not in hashMap:
                hashMap.update({char:tail})
                
            else:
                head = max(hashMap[char] + 1 , head)
                
                hashMap[char] = tail
                #hashMap[char] 
            result = max(result, tail - head + 1)
            tail = tail + 1            
            #print("head ", head)
            #print("tail ", tail)
            #print(hashMap)
            #print("result ", result)
            #print("-------")
            
        return result
            
            
            